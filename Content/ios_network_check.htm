<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us"
      data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../"
      data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false"
      data-mc-in-preview-mode="false" data-mc-toc-path="Getting Started with MokiMobility on iOS">
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>Network Check Programming Guide</title>
    <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet"/>
    <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet"/>
    <link href="Resources/mm.css" rel="stylesheet"/>
    <script src="../Resources/Scripts/jquery.min.js">
    </script>
    <script src="../Resources/Scripts/plugins.min.js">
    </script>
    <script src="../Resources/Scripts/require.min.js">
    </script>
    <script src="../Resources/Scripts/require.config.js">
    </script>
    <script src="../Resources/Scripts/MadCapAll.js">
    </script>
</head>
<body>
<p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../index.htm#ios_network_check.htm">Open topic with
    navigation</a>
</p>

<div class="main">
    <h1>Network Check Programming Guide</h1>

    <p>The Network Check component of the MokiManage SDK adds network connectivity and 
        performance diagnostics to an app. Network Check is an effective diagnostic tool when users 
        of an app are experiencing connectivity problems. Using it can help support and development 
        personnel understand if there is a connectivity issue, and if so, which component within the
        network stack is not working.</p>

    <p>Every time Network Check runs, it performs the following actions:</p>

    <ul>
        <li>Pings the default gateway</li>
        <li>Pings an outside host (designated as google.com)</li>
        <li>Pings MokiMobility</li>
        <li>Tests DNS connectivity and latency</li>
        <li>Validates that ports 80, 443, 5228, 5229, and 5230 are open.</li>
        <li>Issues a GET request to the developer-defined URLs, and indicates whether the specified
            text is found in the response.
        </li>
    </ul>

    <p>Network Check can run in either Basic Check mode or Advanced Check mode:</p>

    <ul>
        <li>
            <bold>Basic Check</bold>
            : Runs a single Network Check at every heartbeat.
        </li>
        <li>
            <bold>Advanced Check</bold>
            : Does duration testing, and includes average latency, max latency, and
            missing packets. Advanced check does not run on the heartbeat—it must be triggered to be
            run. This test is ideal for support personnel when they are troubleshooting.
        </li>
    </ul>

    <p>The results of every Network Check are uploaded to the MokiManage server. If the app is unable
        to contact the server, the results of the Network Check are stored on the device until it is able to 
        reach the server, at which point the stored Network Check results are uploaded.</p>

    <h2>Adding URLs to Network Check</h2>

    <ul>
        <li>Import the MMNetworkReport.h class into the source file you are coding in.</li>
        <li>In the addURL method, add the URLs and text strings that you want the Network Check to
            test. Note that the URL must be in its fully-qualified form.
        </li>
    </ul>

    <p>The following examples show several possible scenarios:</p>

    <pre xml:space="preserve">
    MMNetworkReport* networkReport = [MMNetworkReport new];

    [networkReport addURL:@"http://yahoo.com" checkForString:@"Example A"
    error:error];

    [networkReport addURL:@"http://mokimobility.com" checkForString:@"Example B"
    error:error];

 

 

    [networkReport addURL:@"http://YourServer.com:107" checkForString:nil
    error:error];

    [networkReport runBasicWithCompletionBlock:^(BOOL succeeded){
        //get all report data in NSDictionary format
        NSDictionary* dictionaryReport = [networkReport encode];

        //get individual checks and data
        NSArray* portList = [networkReport
    networkChecksForCheckType:MMNetworkCheckTypePortScans];
        MMNetworkCheck* networkCheck = [portList objectAtIndex:0];
        NSString* result = networkCheck.result;

    }];
    </pre>


    <hr style="color: #c0c0c0;" width="100%" size="0" align="center"/>
</div>
</body>
</html>