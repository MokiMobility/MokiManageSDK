<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us"
      data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../"
      data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false"
      data-mc-in-preview-mode="false" data-mc-toc-path="Getting Started with MokiMobility on iOS">
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>Custom Actions Programming Guide</title>
    <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet"/>
    <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet"/>
    <link href="Resources/mm.css" rel="stylesheet"/>
    <script src="../Resources/Scripts/jquery.min.js">
    </script>
    <script src="../Resources/Scripts/plugins.min.js">
    </script>
    <script src="../Resources/Scripts/require.min.js">
    </script>
    <script src="../Resources/Scripts/require.config.js">
    </script>
    <script src="../Resources/Scripts/MadCapAll.js">
    </script>
</head>
<body>
<p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../index.htm#ios_custom_actions.htm">Open topic with
    navigation</a>
</p>

<div class="main">
    <h1>Custom Actions Programming Guide</h1>

    <p>Custom Actions allow developers to create their own action references that can be triggered on

        the device. MokiManage provides a set of pre-defined actions such as taking screenshots, getting

        logs, getting device location, sending messages, and checking compliance. Developers have 

        the flexibility add their own action references that are specific to the needs of their app and its 

        users. Custom actions will be included alongside the MokiManage pre-defined actions on the 

        MokiManage dashboard.</p>

    <p>When a custom action is received, the

        <span class="VariablesMokiManage">MMApplicationDidRecieveCustomActionNotification</span> is called. This notification conforms 

        to Apple <span class="VariablesMokiManage">NSNotifications</span> that are broadcasted through the NS Notification Center. For more 

        information on this topic, <a
                href="http://developer.android.com/reference/android/content/BroadcastReceiver.html">see the Apple documentation.</a>
    </p>

    <p>The APNS notification received from MokiManage will be included in the <span class="VariablesMokiManage">userInfo</span> of the

        notification. If you app has multiple custom actions defined, extract the action reference from 

        <span class="VariablesMokiManage">userInfo</span> using <span class="VariablesMokiManage">[notification.userInfo objectForKey:@"command"]</span>.</p>

    <p>Note: Messaging service is required for custom actions. Make sure that APNS is configured.</p>

    <h2>Adding Custom Actions to the Actions List on the Dashboard</h2>

    <ol>
        <li value="1">Log on to MokiManage.com
        </li>
        <li value="2">From the
            <bold>Change App</bold>
            drop-down list in the top-left corner, select your app
        </li>
        <li value="3">Click the
            <bold>Actions Tab</bold>
        </li>
        <li value="4">Click
            <bold>Custom Actions</bold>
        </li>
        <li value="5">In the
            <bold>Custom Actions Name</bold>
            field, give your new action a name
        </li>
        <li value="6">Click
            <bold>Add</bold>
            , the click
            <bold>Done</bold>
        </li>
    </ol>

    <p>Your custom action will now appear in the Action drop-down list on the Devices page of the
        dashboard.</p>

    <h2>Running a Custom Action from the dashboard</h2>

    <ol>
        <li value="1">Log on to MokiManage.com
        </li>
        <li value="2">From the
            <bold>Change App</bold>
            drop-down list in the top-left corner, select your app
        </li>
        <li value="3">Click the Devices tab.
        </li>
        <li value="4">Select the device or devices on which you want to run the custom action.
        </li>
        <li value="5">5.From the 
            <bold>Actions</bold>
             drop-down menu, select the custom action that you want to run.
        </li>
    </ol>

    <p>Note: This will call <span class="VariablesMokiManage">MMApplicationDidRecieveCustomActionNotification</span> on the device.</p>

    <h2>Scenarios / Examples</h2>

     <pre xml:space="preserve">
      //
      //  AppDelegate.m
      //

      @implementation AppDelegate

      - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
      {

	      //............
		
            [[NSNotificationCenter defaultCenter] addObserverForName:MMApplicationDidRecieveCustomActionNotification object:nil queue:nil usingBlock:^(NSNotification *note) {
		      if ([note.userInfo objectForKey:@"Show Current Time"]) {
		  	      [self showCurrentTime];
			}
		}];
            return YES;
      }
      - (void)showCurrentTime{
            NSDate *date = [NSDate dateWithTimeIntervalSinceNow:0];
            [[[UIAlertView alloc] initWithTitle:@"Current Time" message:[NSString stringWithFormat:@"Time: %@", date] delegate:nil cancelButtonTitle:@"Cool" otherButtonTitles: nil] show];
      }
      </pre>
    <hr style="color: #c0c0c0;" width="100%" size="0" align="center"/>
</div>
</body>
</html>
